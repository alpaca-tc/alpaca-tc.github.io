{"pageProps":{"post":{"id":"2020-12-21-rust-advent-calendar","title":"Rustでブラウザからバイナリをパースする","date":"2020-12-21 17:21","content":"<p>この記事は<a href=\"https://qiita.com/advent-calendar/2020/rust\">Rust Advent Calendar 2020</a> 21日目の記事です。</p>\n<p>お仕事のメインはRuby/TypeScriptを使っていますが、新しいことを学びたいなーと思って、Rustを勉強し始めてみました。<br>\n今回はWebAssemblyを使って、ブラウザからバイナリファイルをパースする処理を書いてみます。</p>\n<h2>RustをWebAssemblyに変換する</h2>\n<p>この手の記事は沢山あるので、ざっくりやり方だけ書いておきます。<br>\n<a href=\"https://github.com/rustwasm/wasm-bindgen\"><code>wasm-bindgen</code></a>と<a href=\"https://github.com/rustwasm/wasm-pack\"><code>wasm-pack</code></a>をインストールして、</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\"># Cargo.toml\n[package]\nname = &#x26;quot;app&#x26;quot;\nversion = &#x26;quot;0.0.1&#x26;quot;\nedition = &#x26;quot;2018&#x26;quot;\n\n[lib]\ncrate-type = [&#x26;quot;cdylib&#x26;quot;]\n\n[dependencies]\nwasm-bindgen = &#x26;quot;0.2.63&#x26;quot;</code></pre></div>\n<div class=\"remark-highlight\"><pre class=\"language-rust\"><code class=\"language-rust\"># src<span class=\"token operator\">/</span>lib<span class=\"token punctuation\">.</span>rs\n<span class=\"token keyword\">use</span> <span class=\"token namespace\">wasm_bindgen<span class=\"token punctuation\">::</span>prelude<span class=\"token punctuation\">::</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token attribute attr-name\">#[wasm_bindgen]</span>\n<span class=\"token keyword\">struct</span> <span class=\"token type-definition class-name\">ApplicationRunner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token attribute attr-name\">#[wasm_bindgen]</span>\n<span class=\"token keyword\">impl</span> <span class=\"token class-name\">ApplicationRunner</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">pub</span> <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">new</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"remark-highlight\"><pre class=\"language-html\"><code class=\"language-html\"># index.html\n<span class=\"token doctype\"><span class=\"token punctuation\">&#x3C;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>html</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>module<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n      <span class=\"token keyword module\">import</span> <span class=\"token imports\">init<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">ApplicationRunner</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./app.js'</span>\n\n      <span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword control-flow\">await</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/app.wasm'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">ApplicationRunner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>html</span><span class=\"token punctuation\">></span></span>\n</code></pre></div>\n<p>あとは <code>wasm-pack</code> を使ってコンパイルすれば完成です。\nめちゃ簡単。</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">$ wasm-pack build --no-typescript --dev --target web --out-dir ./public</code></pre></div>\n<h2>ファイルを読み込む</h2>\n<p>続いて、ブラウザから、ファイルを指定してRustにパースさせる導線を作っていきます。<br>\n先ほど定義した <code>ApplicationRunner</code> をnewしたタイミングで、イベントをlistenしたDOMをレンダリングしておきます。</p>\n<p>DOMの生成には <code>virtual_dom_rs</code> と <code>web_sys</code> と <code>js_sys</code> を使います。<br>\nすごく単純な例では、こんな感じでDOMをマウントすることができます。</p>\n<div class=\"remark-highlight\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token keyword\">let</span> vdom <span class=\"token operator\">=</span> <span class=\"token macro property\">html!</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">&#x3C;</span>div<span class=\"token operator\">></span><span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> window <span class=\"token operator\">=</span> <span class=\"token namespace\">web_sys<span class=\"token punctuation\">::</span></span><span class=\"token function\">window</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">unwrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">let</span> dom_updater <span class=\"token operator\">=</span> <span class=\"token class-name\">DomUpdater</span><span class=\"token punctuation\">::</span><span class=\"token function\">new_append_to_mount</span><span class=\"token punctuation\">(</span>vdom<span class=\"token punctuation\">,</span> <span class=\"token operator\">&#x26;</span>window<span class=\"token punctuation\">.</span><span class=\"token function\">document</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">unwrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">body</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">unwrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndom_updater<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span>vdom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>今回はファイルの読み込みをしたいので、vdomの中身を書き換えて、inputタグにイベントを仕込んだDOMにしてみます。</p>\n<div class=\"remark-highlight\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token macro property\">html!</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">&#x3C;</span>input\n    <span class=\"token keyword\">type</span><span class=\"token operator\">=</span><span class=\"token string\">\"file\"</span>\n    onchange<span class=\"token operator\">=</span><span class=\"token keyword\">move</span> <span class=\"token closure-params\"><span class=\"token closure-punctuation punctuation\">|</span>event<span class=\"token punctuation\">:</span> <span class=\"token namespace\">web_sys<span class=\"token punctuation\">::</span></span><span class=\"token class-name\">InputEvent</span><span class=\"token closure-punctuation punctuation\">|</span></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> target <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span><span class=\"token function\">target</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">unwrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">let</span> input <span class=\"token operator\">=</span> target<span class=\"token punctuation\">.</span><span class=\"token function\">dyn_ref</span><span class=\"token punctuation\">::</span><span class=\"token operator\">&#x3C;</span><span class=\"token class-name\">HtmlInputElement</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">unwrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">let</span> files <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">files</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">unwrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">let</span> file <span class=\"token operator\">=</span> files<span class=\"token punctuation\">.</span><span class=\"token function\">item</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">unwrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">let</span> file_reader <span class=\"token operator\">=</span> <span class=\"token namespace\">web_sys<span class=\"token punctuation\">::</span></span><span class=\"token class-name\">FileReader</span><span class=\"token punctuation\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">unwrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        file_reader<span class=\"token punctuation\">.</span><span class=\"token function\">read_as_array_buffer</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&#x26;</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">unwrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">let</span> <span class=\"token keyword\">mut</span> onload <span class=\"token operator\">=</span> <span class=\"token class-name\">Closure</span><span class=\"token punctuation\">::</span><span class=\"token function\">wrap</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Box</span><span class=\"token punctuation\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">move</span> <span class=\"token closure-params\"><span class=\"token closure-punctuation punctuation\">|</span>event<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Event</span><span class=\"token closure-punctuation punctuation\">|</span></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">let</span> file_reader<span class=\"token punctuation\">:</span> <span class=\"token class-name\">FileReader</span> <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span><span class=\"token function\">target</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">unwrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">dyn_into</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">unwrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">let</span> file <span class=\"token operator\">=</span> file_reader<span class=\"token punctuation\">.</span><span class=\"token function\">result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">unwrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">let</span> file <span class=\"token operator\">=</span> <span class=\"token namespace\">js_sys<span class=\"token punctuation\">::</span></span><span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&#x26;</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">let</span> <span class=\"token keyword\">mut</span> bytes <span class=\"token operator\">=</span> <span class=\"token macro property\">vec!</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">usize</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            file<span class=\"token punctuation\">.</span><span class=\"token function\">copy_to</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&#x26;</span><span class=\"token keyword\">mut</span> bytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// ここにファイルの中身のパースを開始する処理を追加する</span>\n            <span class=\"token function\">do_something</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&#x26;</span>bytes<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token class-name\">Box</span><span class=\"token operator\">&#x3C;</span><span class=\"token class-name\">FnMut</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        file_reader<span class=\"token punctuation\">.</span><span class=\"token function\">set_onload</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Some</span><span class=\"token punctuation\">(</span>onload<span class=\"token punctuation\">.</span><span class=\"token function\">as_ref</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">unchecked_ref</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        onload<span class=\"token punctuation\">.</span><span class=\"token function\">forget</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">></span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h2>ファイルをパースする</h2>\n<p>ファイルの読み込みする処理が書けたので、次はファイルをパースしていきます。<br>\n単にバイナリを読んでいくだけであれば <code>std::io::Cursor</code> だけでいけますが、little endianを読み込もうとするとやや操作が面倒です。</p>\n<p>そこで、<a href=\"https://docs.rs/byteorder/1.3.4/byteorder/\">byteorder</a>を使って読み込んでいきます。<br>\n下記の例では、今後UTF8の文字列変換や特定のバイナリに特化した読み込みに対応する時に拡張しやすくするために、読み取り用のwrapperを用意しました。<br>\n単純なzipファイルのパースであれば、file name fieldやextra fieldなどの可変長のfieldがあるため、指定長でvecやstringを返すメソッドも用意するといいかもしれません。</p>\n<div class=\"remark-highlight\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token keyword\">use</span> <span class=\"token namespace\">byteorder<span class=\"token punctuation\">::</span></span><span class=\"token punctuation\">{</span><span class=\"token class-name\">BigEndian</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">ByteOrder</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">LittleEndian</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">ReadBytesExt</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">pub</span> <span class=\"token keyword\">struct</span> <span class=\"token type-definition class-name\">Binary</span><span class=\"token operator\">&#x3C;</span><span class=\"token lifetime-annotation symbol\">'a</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    cursor<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Cursor</span><span class=\"token operator\">&#x3C;</span><span class=\"token operator\">&#x26;</span><span class=\"token lifetime-annotation symbol\">'a</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">u8</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">impl</span><span class=\"token operator\">&#x3C;</span><span class=\"token lifetime-annotation symbol\">'a</span><span class=\"token operator\">></span> <span class=\"token class-name\">Binary</span><span class=\"token operator\">&#x3C;</span><span class=\"token lifetime-annotation symbol\">'a</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">pub</span> <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">new</span><span class=\"token punctuation\">(</span>bytes<span class=\"token punctuation\">:</span> <span class=\"token operator\">&#x26;</span><span class=\"token punctuation\">[</span><span class=\"token keyword\">u8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> <span class=\"token class-name\">Binary</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Binary</span> <span class=\"token punctuation\">{</span>\n            cursor<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Cursor</span><span class=\"token punctuation\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span>bytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">pub</span> <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">position</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&#x26;</span><span class=\"token keyword\">mut</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> <span class=\"token keyword\">u64</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">.</span><span class=\"token function\">position</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">pub</span> <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">read_little_u16</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&#x26;</span><span class=\"token keyword\">mut</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> <span class=\"token class-name\">Result</span><span class=\"token operator\">&#x3C;</span><span class=\"token keyword\">u16</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Error</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Ok</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">.</span><span class=\"token function\">read_u16</span><span class=\"token punctuation\">::</span><span class=\"token operator\">&#x3C;</span><span class=\"token class-name\">LittleEndian</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">unwrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">pub</span> <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">read_little_u32</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&#x26;</span><span class=\"token keyword\">mut</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> <span class=\"token class-name\">Result</span><span class=\"token operator\">&#x3C;</span><span class=\"token keyword\">u32</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Error</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Ok</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">.</span><span class=\"token function\">read_u32</span><span class=\"token punctuation\">::</span><span class=\"token operator\">&#x3C;</span><span class=\"token class-name\">LittleEndian</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">unwrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">pub</span> <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">read_u16</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&#x26;</span><span class=\"token keyword\">mut</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> <span class=\"token class-name\">Result</span><span class=\"token operator\">&#x3C;</span><span class=\"token keyword\">u16</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Error</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Ok</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">.</span><span class=\"token function\">read_u16</span><span class=\"token punctuation\">::</span><span class=\"token operator\">&#x3C;</span><span class=\"token class-name\">BigEndian</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">unwrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">pub</span> <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">read_u32</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&#x26;</span><span class=\"token keyword\">mut</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> <span class=\"token class-name\">Result</span><span class=\"token operator\">&#x3C;</span><span class=\"token keyword\">u32</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Error</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Ok</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">.</span><span class=\"token function\">read_u32</span><span class=\"token punctuation\">::</span><span class=\"token operator\">&#x3C;</span><span class=\"token class-name\">BigEndian</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">unwrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">pub</span> <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">read_i16</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&#x26;</span><span class=\"token keyword\">mut</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> <span class=\"token class-name\">Result</span><span class=\"token operator\">&#x3C;</span><span class=\"token keyword\">i16</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Error</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Ok</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">.</span><span class=\"token function\">read_i16</span><span class=\"token punctuation\">::</span><span class=\"token operator\">&#x3C;</span><span class=\"token class-name\">BigEndian</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">unwrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">pub</span> <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">read_i32</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&#x26;</span><span class=\"token keyword\">mut</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> <span class=\"token class-name\">Result</span><span class=\"token operator\">&#x3C;</span><span class=\"token keyword\">i32</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Error</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Ok</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">.</span><span class=\"token function\">read_i32</span><span class=\"token punctuation\">::</span><span class=\"token operator\">&#x3C;</span><span class=\"token class-name\">BigEndian</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">unwrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h3>パース処理を書いていく</h3>\n<p>過去にRubyでpsdやzipのパーサを書いたことがあるのですが、これらは仕様書通りの単純な構造だったので、同様に先頭から読み込んでstructに詰めていくだけでいけそうです。<br>\n今回はzipのヘッダーをパースする処理の書いてみます。</p>\n<div class=\"remark-highlight\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token comment\">// == LocalFileHeader</span>\n<span class=\"token comment\">//</span>\n<span class=\"token comment\">// local file header signature     4 bytes  (0x04034b50)</span>\n<span class=\"token comment\">// version needed to extract       2 bytes</span>\n<span class=\"token comment\">// general purpose bit flag        2 bytes</span>\n<span class=\"token comment\">// compression method              2 bytes</span>\n<span class=\"token comment\">// last mod file time              2 bytes</span>\n<span class=\"token comment\">// last mod file date              2 bytes</span>\n<span class=\"token comment\">// crc-32                          4 bytes</span>\n<span class=\"token comment\">// compressed size                 4 bytes</span>\n<span class=\"token comment\">// uncompressed size               4 bytes</span>\n<span class=\"token comment\">// file name length                2 bytes</span>\n<span class=\"token comment\">// extra field length              2 bytes</span>\n<span class=\"token keyword\">struct</span> <span class=\"token type-definition class-name\">LocalFileHeader</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">pub</span> signature<span class=\"token punctuation\">:</span> <span class=\"token keyword\">u32</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">pub</span> version<span class=\"token punctuation\">:</span> <span class=\"token keyword\">u16</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">pub</span> general_purpose_bit_flag<span class=\"token punctuation\">:</span> <span class=\"token keyword\">u16</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">pub</span> compression_method<span class=\"token punctuation\">:</span> <span class=\"token keyword\">u16</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">pub</span> last_modified_file_time<span class=\"token punctuation\">:</span> <span class=\"token keyword\">u16</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">pub</span> last_modified_file_date<span class=\"token punctuation\">:</span> <span class=\"token keyword\">u16</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">pub</span> crc_32<span class=\"token punctuation\">:</span> <span class=\"token keyword\">u32</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">pub</span> compressed_size<span class=\"token punctuation\">:</span> <span class=\"token keyword\">u32</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">pub</span> uncompressed_size<span class=\"token punctuation\">:</span> <span class=\"token keyword\">u32</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">pub</span> file_name_length<span class=\"token punctuation\">:</span> <span class=\"token keyword\">u16</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">pub</span> extra_field_length<span class=\"token punctuation\">:</span> <span class=\"token keyword\">u16</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">impl</span> <span class=\"token class-name\">LocalFileHeader</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">pub</span> <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">from_bytes</span><span class=\"token punctuation\">(</span>bytes<span class=\"token punctuation\">:</span> <span class=\"token operator\">&#x26;</span><span class=\"token punctuation\">[</span><span class=\"token keyword\">u8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> <span class=\"token class-name\">Result</span><span class=\"token operator\">&#x3C;</span><span class=\"token class-name\">LocalFileHeader</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Error</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> <span class=\"token keyword\">mut</span> binary <span class=\"token operator\">=</span> <span class=\"token class-name\">Binary</span><span class=\"token punctuation\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span>bytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">let</span> signature <span class=\"token operator\">=</span> binary<span class=\"token punctuation\">.</span><span class=\"token function\">read_little_u32</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">let</span> version <span class=\"token operator\">=</span> binary<span class=\"token punctuation\">.</span><span class=\"token function\">read_little_u16</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">let</span> general_purpose_bit_flag <span class=\"token operator\">=</span> binary<span class=\"token punctuation\">.</span><span class=\"token function\">read_little_u16</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">let</span> compression_method <span class=\"token operator\">=</span> binary<span class=\"token punctuation\">.</span><span class=\"token function\">read_little_u16</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">let</span> last_modified_file_time <span class=\"token operator\">=</span> binary<span class=\"token punctuation\">.</span><span class=\"token function\">read_u16</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">let</span> last_modified_file_date <span class=\"token operator\">=</span> binary<span class=\"token punctuation\">.</span><span class=\"token function\">read_u16</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">let</span> crc_32 <span class=\"token operator\">=</span> binary<span class=\"token punctuation\">.</span><span class=\"token function\">read_u32</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">let</span> compressed_size <span class=\"token operator\">=</span> binary<span class=\"token punctuation\">.</span><span class=\"token function\">read_u32</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">let</span> uncompressed_size <span class=\"token operator\">=</span> binary<span class=\"token punctuation\">.</span><span class=\"token function\">read_u32</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">let</span> file_name_length <span class=\"token operator\">=</span> binary<span class=\"token punctuation\">.</span><span class=\"token function\">read_u16</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">let</span> extra_field_length <span class=\"token operator\">=</span> binary<span class=\"token punctuation\">.</span><span class=\"token function\">read_u16</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">Ok</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">LocalFileHeader</span> <span class=\"token punctuation\">{</span>\n            signature<span class=\"token punctuation\">,</span>\n            version<span class=\"token punctuation\">,</span>\n            general_purpose_bit_flag<span class=\"token punctuation\">,</span>\n            compression_method<span class=\"token punctuation\">,</span>\n            last_modified_file_time<span class=\"token punctuation\">:</span> last_modified_file_time<span class=\"token punctuation\">,</span>\n            last_modified_file_date<span class=\"token punctuation\">,</span>\n            crc_32<span class=\"token punctuation\">,</span>\n            compressed_size<span class=\"token punctuation\">,</span>\n            uncompressed_size<span class=\"token punctuation\">,</span>\n            file_name_length<span class=\"token punctuation\">,</span>\n            extra_field_length<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>とても簡単ですね。</p>\n<h2>パースした内容をHTMLにレンダリングする</h2>\n<p>では、最後にパースした内容をHTMLへレンダリングしてみます。<br>\n諸々省略しているのでこのままでは動きませんが、雰囲気としてはこんな感じでDOMを生成して、初めに作ったDomUpdaterのupdateに返り値のVirtualNodeを渡せばOKです。</p>\n<div class=\"remark-highlight\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token comment\">// let local_file_header = LocalFileHeader::from_bytes(&#x26;bytes)</span>\n<span class=\"token comment\">// let vdom = render(...)</span>\n<span class=\"token comment\">// dom_updater.update(vdom); という感じで使う</span>\n<span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">render</span><span class=\"token punctuation\">(</span>local_file_header<span class=\"token punctuation\">:</span> <span class=\"token operator\">&#x26;</span><span class=\"token class-name\">LocalFileHeader</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> <span class=\"token class-name\">VirtualNode</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token macro property\">html!</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token operator\">&#x3C;</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&#x3C;</span>span<span class=\"token operator\">></span>\n          signature<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token macro property\">format!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{:X}\"</span><span class=\"token punctuation\">,</span> local_file_header<span class=\"token punctuation\">.</span>signature<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">&#x3C;</span>br<span class=\"token operator\">></span>\n          version<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token macro property\">format!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{:X}\"</span><span class=\"token punctuation\">,</span> local_file_header<span class=\"token punctuation\">.</span>version<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">&#x3C;</span>br<span class=\"token operator\">></span>\n          general_purpose_bit_flag<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token macro property\">format!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{:X}\"</span><span class=\"token punctuation\">,</span> local_file_header<span class=\"token punctuation\">.</span>general_purpose_bit_flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">&#x3C;</span>br<span class=\"token operator\">></span>\n          compression_method<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token macro property\">format!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{:X}\"</span><span class=\"token punctuation\">,</span> local_file_header<span class=\"token punctuation\">.</span>compression_method<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">&#x3C;</span>br<span class=\"token operator\">></span>\n          last_modified_file_time<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token macro property\">format!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{:X}\"</span><span class=\"token punctuation\">,</span> local_file_header<span class=\"token punctuation\">.</span>last_modified_file_time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">&#x3C;</span>br<span class=\"token operator\">></span>\n          last_modified_file_date<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token macro property\">format!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{:X}\"</span><span class=\"token punctuation\">,</span> local_file_header<span class=\"token punctuation\">.</span>last_modified_file_date<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">&#x3C;</span>br<span class=\"token operator\">></span>\n          crc_32<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token macro property\">format!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{:X}\"</span><span class=\"token punctuation\">,</span> local_file_header<span class=\"token punctuation\">.</span>crc_32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">&#x3C;</span>br<span class=\"token operator\">></span>\n        <span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n      <span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h2>まとめ</h2>\n<p>今回は<code>wasm-bindgen</code>を使ってブラウザでファイルをパースする処理を書いてみました。<br>\nもう少しパース処理を作り込んでいけば、画像変換やzipの再圧縮などいろいろな処理を書くことができそうです。</p>\n<p>可能であれば、仕事でもちゃんとRust書いてみたいのでReal Worldの活用事例をもっと知りたいなぁと思いました(´・ω・｀)</p>"}},"__N_SSG":true}