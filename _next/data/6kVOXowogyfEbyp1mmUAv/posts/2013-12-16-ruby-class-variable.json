{"pageProps":{"post":{"id":"2013-12-16-ruby-class-variable","title":"Rubyのクラス変数について詰まったのでヘルプ","date":"2013-12-16 01:10","content":"<p>基本的に、仕事でクラス変数を扱うことはほぼ無いです。</p>\n<p>今回は遊びのコードを書いていて、悩んだことをまとめました。</p>\n<!-- more -->\n<h1>Rubyのクラス変数の扱いが難しい...。</h1>\n<p>これ、結構Ruby書いている自分でも初めて遭遇して悩む問題だった。</p>\n<p>まず、次のような動くコードを書いてみた。</p>\n<div class=\"remark-highlight\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Base</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">end</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Node</span> <span class=\"token operator\">&#x3C;</span> Base\n  <span class=\"token variable\">@@val</span> <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">'Node'</span></span>\n<span class=\"token keyword\">end</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Branch</span> <span class=\"token operator\">&#x3C;</span> Base\n  <span class=\"token variable\">@@val</span> <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">'Branch'</span></span>\n<span class=\"token keyword\">end</span>\n\np Node<span class=\"token punctuation\">.</span>class_variable_get<span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">'@@val'</span></span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#=> 'Node'</span>\np Branch<span class=\"token punctuation\">.</span>class_variable_get<span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">'@@val'</span></span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#=> 'Branch'</span>\n</code></pre></div>\n<p>ふむ、それぞれの派生クラスでクラス変数が使えますね。</p>\n<p>では、続いて基底クラスにもクラス変数を与えてみる。</p>\n<div class=\"remark-highlight\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Base</span>\n  <span class=\"token variable\">@@val</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">nil</span>\n<span class=\"token keyword\">end</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Node</span> <span class=\"token operator\">&#x3C;</span> Base\n  <span class=\"token variable\">@@val</span> <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">'Node'</span></span>\n<span class=\"token keyword\">end</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Branch</span> <span class=\"token operator\">&#x3C;</span> Base\n  <span class=\"token variable\">@@val</span> <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">'Branch'</span></span>\n<span class=\"token keyword\">end</span>\n\np Node<span class=\"token punctuation\">.</span>class_variable_get<span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">'@@val'</span></span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#=> 'Branch'</span>\np Branch<span class=\"token punctuation\">.</span>class_variable_get<span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">'@@val'</span></span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#=> 'Branch'</span>\n</code></pre></div>\n<p>Ooops!!! 派性クラス内のクラス変数が、基底クラス変数を参照しよる！！</p>\n<h2>解決編</h2>\n<p>やりたいことは、派生クラスの子クラスに共通の変数を持たせるということ。</p>\n<p>うーん、意外と難しい！</p>\n<p>どうもクラス変数という感じではなくなるけれど、こうするしかないのだろうか...。</p>\n<p>メソッドにしてみたら、とっても気持ちが悪い。</p>\n<div class=\"remark-highlight\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Base</span>\n  <span class=\"token keyword\">class</span> <span class=\"token operator\">&#x3C;&#x3C;</span> <span class=\"token keyword\">self</span>\n    <span class=\"token keyword\">private</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">val</span></span>\n      <span class=\"token string-literal\"><span class=\"token string\">'Base'</span></span>\n    <span class=\"token keyword\">end</span>\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Node</span> <span class=\"token operator\">&#x3C;</span> Base\n  <span class=\"token keyword\">class</span> <span class=\"token operator\">&#x3C;&#x3C;</span> <span class=\"token keyword\">self</span>\n    <span class=\"token keyword\">private</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">val</span></span>\n      <span class=\"token string-literal\"><span class=\"token string\">'Node'</span></span>\n    <span class=\"token keyword\">end</span>\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Branch</span> <span class=\"token operator\">&#x3C;</span> Base\n  <span class=\"token keyword\">class</span> <span class=\"token operator\">&#x3C;&#x3C;</span> <span class=\"token keyword\">self</span>\n    <span class=\"token keyword\">private</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">val</span></span>\n      <span class=\"token string-literal\"><span class=\"token string\">'Branch'</span></span>\n    <span class=\"token keyword\">end</span>\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span>\n\np Node<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token symbol\">:val</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#=> 'Node'</span>\np Branch<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token symbol\">:val</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#=> 'Branch'</span>\n</code></pre></div>\n<p>これだと、一応コードとして動く。 ただ、<strong>これは無いだろ感</strong>あるよね。</p>\n<p>しかし、クラスインスタンス変数だと継承されないし、こうするしかないのかなぁ。</p>\n<p><strong>だれか正しい方法があれば、教えてください！</strong> >_&#x3C;</p>\n<h3>追記</h3>\n<p>思いついたんだけど、継承するときにクラスインスタンス変数を渡せばいいのかな？</p>\n<p>どうでしょう。</p>\n<div class=\"remark-highlight\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Base</span>\n  <span class=\"token variable\">@val</span> <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">'Base'</span></span>\n\n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span><span class=\"token function\">inherited</span></span><span class=\"token punctuation\">(</span>klass<span class=\"token punctuation\">)</span>\n    klass<span class=\"token punctuation\">.</span>instance_variable_set<span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">'@val'</span></span><span class=\"token punctuation\">,</span> <span class=\"token variable\">@val</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Node</span> <span class=\"token operator\">&#x3C;</span> Base<span class=\"token punctuation\">;</span> <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Branch</span> <span class=\"token operator\">&#x3C;</span> Base<span class=\"token punctuation\">;</span> <span class=\"token keyword\">end</span>\n\np Node<span class=\"token punctuation\">.</span>instance_variable_get<span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">'@val'</span></span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#=> 'Base'</span>\np Branch<span class=\"token punctuation\">.</span>instance_variable_get<span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">'@val'</span></span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#=> 'Base'</span>\n</code></pre></div>","rawContent":"\n基本的に、仕事でクラス変数を扱うことはほぼ無いです。\n\n今回は遊びのコードを書いていて、悩んだことをまとめました。\n\n<!-- more -->\n\n# Rubyのクラス変数の扱いが難しい...。\n\nこれ、結構Ruby書いている自分でも初めて遭遇して悩む問題だった。\n\nまず、次のような動くコードを書いてみた。\n\n```ruby\nclass Base; end\n\nclass Node < Base\n  @@val = 'Node'\nend\n\nclass Branch < Base\n  @@val = 'Branch'\nend\n\np Node.class_variable_get('@@val') #=> 'Node'\np Branch.class_variable_get('@@val') #=> 'Branch'\n```\n\nふむ、それぞれの派生クラスでクラス変数が使えますね。\n\nでは、続いて基底クラスにもクラス変数を与えてみる。\n\n```ruby\nclass Base\n  @@val = nil\nend\n\nclass Node < Base\n  @@val = 'Node'\nend\n\nclass Branch < Base\n  @@val = 'Branch'\nend\n\np Node.class_variable_get('@@val') #=> 'Branch'\np Branch.class_variable_get('@@val') #=> 'Branch'\n```\n\nOoops!!! 派性クラス内のクラス変数が、基底クラス変数を参照しよる！！\n\n## 解決編\n\nやりたいことは、派生クラスの子クラスに共通の変数を持たせるということ。\n\nうーん、意外と難しい！\n\nどうもクラス変数という感じではなくなるけれど、こうするしかないのだろうか...。\n\nメソッドにしてみたら、とっても気持ちが悪い。\n\n```ruby\nclass Base\n  class << self\n    private\n\n    def val\n      'Base'\n    end\n  end\nend\n\nclass Node < Base\n  class << self\n    private\n\n    def val\n      'Node'\n    end\n  end\nend\n\nclass Branch < Base\n  class << self\n    private\n\n    def val\n      'Branch'\n    end\n  end\nend\n\np Node.send(:val) #=> 'Node'\np Branch.send(:val) #=> 'Branch'\n```\n\nこれだと、一応コードとして動く。 ただ、**これは無いだろ感**あるよね。\n\nしかし、クラスインスタンス変数だと継承されないし、こうするしかないのかなぁ。\n\n**だれか正しい方法があれば、教えてください！** >_<\n\n### 追記\n\n思いついたんだけど、継承するときにクラスインスタンス変数を渡せばいいのかな？\n\nどうでしょう。\n\n```ruby\nclass Base\n  @val = 'Base'\n\n  def self.inherited(klass)\n    klass.instance_variable_set('@val', @val)\n  end\nend\n\nclass Node < Base; end\nclass Branch < Base; end\n\np Node.instance_variable_get('@val') #=> 'Base'\np Branch.instance_variable_get('@val') #=> 'Base'\n```\n"},"prevPost":{"id":"2013-12-17-how-to-use-vim-unite-giti","title":"仕事が捗る！VimからGitを使う最適解","date":"2013-12-17 23:36"},"nextPost":{"id":"2013-12-13-using-vim-unite-watson","title":"Unite.vimとwatsonを使ったワークフロー","date":"2013-12-13 02:29"}},"__N_SSG":true}