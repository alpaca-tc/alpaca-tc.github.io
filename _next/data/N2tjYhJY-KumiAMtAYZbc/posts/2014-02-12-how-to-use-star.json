{"pageProps":{"post":{"id":"2014-02-12-how-to-use-star","title":"ここまで出来る！RubyのSplat Operatorまとめ","date":"2014-02-12 04:16","content":"<p>Splat Operatorとは、<code>*</code>のことです</p>\n<img class=\"image_on_frame center\" src=\"/images/blog/how-to-use-star/capture.png\" alt=\"SplatOperator\" />\n<p>この前、友人にコードレビューしてもらっていたら</p>\n<p>「え、Rubyってこんな書き方出来るんですか？」と言われて、「知らない人もいるんだなぁ」と思ったので簡単なまとめ</p>\n<!-- more -->\n<h1>Splat Operatorの色んな使い方</h1>\n<p>Splat Operatorは、応用の幅が広いです。</p>\n<p>結構当たり前だと思っていましたが、コード読書しないと見る機会は少ないかも。</p>\n<h2>1-1. 配列に変換する</h2>\n<p>まずは基本編。配列に変換してやりましょう</p>\n<p>文字列やsymbolは<code>.to_a</code>が無いですが、<code>*</code>を使えばどの変数でも配列に出来ちゃいます。</p>\n<div class=\"remark-highlight\"><pre class=\"language-ruby\"><code class=\"language-ruby\">string <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token string\">\"string\"</span>\np string <span class=\"token comment\">#=> [\"string\"]</span>\n\nsymbol <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token symbol\">:symbol</span>\np symbol <span class=\"token comment\">#=> [:symbol]</span>\n\nhash <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">{</span> hash<span class=\"token punctuation\">:</span> <span class=\"token keyword\">nil</span> <span class=\"token punctuation\">}</span>\np hash <span class=\"token comment\">#=> [[:hash, nil]]</span>\n\nrange <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.</span><span class=\"token number\">.10</span><span class=\"token punctuation\">)</span>\np range <span class=\"token comment\">#=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]</span>\n</code></pre></div>\n<h2>1-2. 親クラスの引数を気にしない</h2>\n<p>またまた基本編。<code>*</code>を引数に指定してやれば、親クラスの引数は知らなくても大丈夫。</p>\n<p><code>*</code>だけで出来ることを知らない人はいるかも。</p>\n<div class=\"remark-highlight\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Child</span> <span class=\"token operator\">&#x3C;</span> <span class=\"token constant\">Super</span>\n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">initialize</span></span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">super</span>\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span>\n</code></pre></div>\n<h2>1-3. 間の引数をまとめる</h2>\n<p>引数の最後にSplat Operatorを使うことはよくありますが、間はなかなか見ないですね。</p>\n<p>blockで引数を取るときに、間の引数をまとめる事が出来ます。</p>\n<p>メソッドやProc,lambdaでも同様の動作です。</p>\n<div class=\"remark-highlight\"><pre class=\"language-ruby\"><code class=\"language-ruby\">list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token symbol\">:first</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:second</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:third</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:fourth</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:fifth</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\nlist<span class=\"token punctuation\">.</span><span class=\"token keyword\">each</span> <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>first<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>mid<span class=\"token punctuation\">,</span> last<span class=\"token operator\">|</span>\n  p first  <span class=\"token comment\">#=> :first</span>\n  p mid    <span class=\"token comment\">#=> [:second, :third, :fourth]</span>\n  p last   <span class=\"token comment\">#=> :fifth</span>\n<span class=\"token keyword\">end</span>\n\n<span class=\"token comment\"># もちろん、こんなことも出来ます</span>\nfirst<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>other <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\np other <span class=\"token comment\">#=> [2, 3]</span>\n</code></pre></div>\n<h2>1-4. <code>**</code>を使う</h2>\n<p>キーワード引数って、まだあまり普及してないですね。互換性が気になるからだろうか？</p>\n<p><code>**</code>はキーワード引数を取るときに、余った引数をまとめます。</p>\n<div class=\"remark-highlight\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">hoge</span></span><span class=\"token punctuation\">(</span>first<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> second<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>others<span class=\"token punctuation\">)</span>\n  p others <span class=\"token comment\">#=> { third: 3 }</span>\n<span class=\"token keyword\">end</span>\nhoge<span class=\"token punctuation\">(</span>first<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> second<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> third<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>多分これはSplat Operatorと呼ばない。</p>\n<h2>まとめ</h2>\n<p>こんな書き方が出来るSplat Operatorって本当に便利ね！</p>\n<p>( ﾟ∀ﾟ)o彡ﾟんぎもぢいい!!</p>\n<div class=\"remark-highlight\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Integer</span>\n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">upto_with_exception</span></span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>options<span class=\"token punctuation\">)</span>\n    exception_array <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>options<span class=\"token punctuation\">[</span><span class=\"token symbol\">:except</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">#=> nilでも何でもおかまいなし！</span>\n    exceptions <span class=\"token operator\">=</span> <span class=\"token builtin\">Hash</span><span class=\"token punctuation\">[</span>exception_array<span class=\"token punctuation\">.</span>zip<span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>upto<span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">|</span>i<span class=\"token operator\">|</span> p i <span class=\"token keyword\">unless</span> exceptions<span class=\"token punctuation\">.</span>has_key<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span>\n\n<span class=\"token number\">1.</span>upto_with_exception<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#=> 1, 2, 3, 4, 5</span>\n<span class=\"token number\">1.</span>upto_with_exception<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> except<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#=> 1, 2, 4, 5</span>\n<span class=\"token number\">1.</span>upto_with_exception<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> except<span class=\"token punctuation\">:</span> <span class=\"token number\">2.</span><span class=\"token number\">.3</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#=> 1, 4, 5</span>\n<span class=\"token number\">1.</span>upto_with_exception<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> except<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#=> 1, 2, 3</span>\n</code></pre></div>"},"prevPost":{"id":"2014-02-13-i-have-almost-finished-implementing-comment-parser","title":"Gemを書くときに知っておきたい3つの事","date":"2014-02-18 20:52"},"nextPost":{"id":"2014-02-10-create-strip-comment","title":"久しぶりにGemを書いている","date":"2014-02-10 12:33"}},"__N_SSG":true}