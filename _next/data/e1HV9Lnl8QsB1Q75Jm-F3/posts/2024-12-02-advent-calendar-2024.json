{"pageProps":{"post":{"id":"2024-12-02-advent-calendar-2024","title":"Railsで任意のキャッシュストアを移行する","date":"2024-12-02 19:00","content":"<p><a href=\"https://qiita.com/advent-calendar/2024/smarthr\">SmartHR Advent Calendar 2024</a>の2日目です。</p>\n<p>Railsでは <code>Rails.cache</code> でキャッシュストアを扱うことができます。<br>\nこのキャッシュストアを、保存先の変更や、gemの変更等で別のキャッシュストアに移行することが稀にあります。</p>\n<p>今回は、そんなキャッシュストアの移行手順について書いていきます。</p>\n<h2>1. ハイブリッドのキャッシュストアを定義する</h2>\n<p>本番環境でキャッシュストアを変更する際には、新旧のキャッシュストアを一気に入れ替えると不具合が起きて困るでしょう。<br>\nまずは、移行期間には双方のキャッシュストアが使えるようなハイブリッドのキャッシュストアを定義します。</p>\n<div class=\"remark-highlight\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">HybridCache</span> <span class=\"token operator\">&#x3C;</span> ActiveSupport<span class=\"token double-colon punctuation\">::</span>Cache<span class=\"token double-colon punctuation\">::</span>Store\n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">initialize</span></span><span class=\"token punctuation\">(</span><span class=\"token symbol\">new_cache</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">old_cache</span><span class=\"token operator\">:</span><span class=\"token punctuation\">)</span>\n    <span class=\"token variable\">@new_cache</span> <span class=\"token operator\">=</span> new_cache\n    <span class=\"token variable\">@old_cache</span> <span class=\"token operator\">=</span> old_cache\n  <span class=\"token keyword\">end</span>\n\n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">read</span></span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token punctuation\">)</span>\n    old_cache<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> new_cache<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">end</span>\n  <span class=\"token comment\"># fetch/exist?/read_multi/fetch_multi を同様に実装する</span>\n\n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">clear</span></span>\n    old_cache<span class=\"token punctuation\">.</span>clear\n    new_cache<span class=\"token punctuation\">.</span>clear\n  <span class=\"token keyword\">end</span>\u0006\n  <span class=\"token comment\"># delete/delete_matched/write/write_multi/increment/decrement 等を同様に実装する</span>\n\n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">silence</span></span><span class=\"token operator\">!</span>\n    old_cache<span class=\"token punctuation\">.</span>silence<span class=\"token operator\">!</span>\n    new_cache<span class=\"token punctuation\">.</span>silence<span class=\"token operator\">!</span>\n  <span class=\"token keyword\">end</span>\n\n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">mute</span></span>\n    old_cache<span class=\"token punctuation\">.</span>mute <span class=\"token keyword\">do</span>\n      new_cache<span class=\"token punctuation\">.</span>mute <span class=\"token keyword\">do</span>\n        <span class=\"token keyword\">yield</span>\n      <span class=\"token keyword\">end</span>\n    <span class=\"token keyword\">end</span>\n  <span class=\"token keyword\">end</span>\n\n  <span class=\"token keyword\">private</span>\n\n  attr_reader <span class=\"token symbol\">:old_cache</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:new_cache</span>\n<span class=\"token keyword\">end</span>\n</code></pre></div>\n<div class=\"remark-highlight\"><pre class=\"language-ruby\"><code class=\"language-ruby\">config<span class=\"token punctuation\">.</span>cache_store <span class=\"token operator\">=</span> Hanica<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">HybridCache</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span>\n  <span class=\"token symbol\">old_cache</span><span class=\"token operator\">:</span> ActiveSupport<span class=\"token double-colon punctuation\">::</span>Cache<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">XxxCacheStore</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token symbol\">new_cache</span><span class=\"token operator\">:</span> ActiveSupport<span class=\"token double-colon punctuation\">::</span>Cache<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">XxxCacheStore</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n</code></pre></div>\n<h2>2. デプロイする</h2>\n<p>ハイブリッドのキャッシュストアを定義したら、デプロイして本番環境でキャッシュを同期していきます。</p>\n<p>実際のところ、新旧どちらのキャッシュ結果を優先するかで実装は若干変わりますが、新旧のキャッシュストアをうまく稼働させることで、移行期間中に新しいキャッシュストアにもキャッシュが反映されていくようにしています。</p>\n<h2>3. 新しいキャッシュストアに移行する</h2>\n<p>最後に、十分に移行期間が経過して新しいキャッシュストアにキャッシュが書き込まれたら、新しいキャッシュストアに移行します。</p>\n<div class=\"remark-highlight\"><pre class=\"language-ruby\"><code class=\"language-ruby\">config<span class=\"token punctuation\">.</span>cache_store <span class=\"token operator\">=</span> ActiveSupport<span class=\"token double-colon punctuation\">::</span>Cache<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">XxxCacheStore</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>これにて、Railsで任意のキャッシュストアを移行する手順を紹介しました。<br>\n実際には<a href=\"https://github.com/redis-store/redis-activesupport\">redis-activesupport</a>からRails本体のRedis実装に移行したのですが、この手順で問題なく移行できました。</p>\n<p>以外と、誰も手順を公開していなかったので参考になれば幸いです。</p>","rawContent":"\n[SmartHR Advent Calendar 2024](https://qiita.com/advent-calendar/2024/smarthr)の2日目です。\n\nRailsでは `Rails.cache` でキャッシュストアを扱うことができます。  \nこのキャッシュストアを、保存先の変更や、gemの変更等で別のキャッシュストアに移行することが稀にあります。\n\n今回は、そんなキャッシュストアの移行手順について書いていきます。\n\n## 1. ハイブリッドのキャッシュストアを定義する\n\n本番環境でキャッシュストアを変更する際には、新旧のキャッシュストアを一気に入れ替えると不具合が起きて困るでしょう。  \nまずは、移行期間には双方のキャッシュストアが使えるようなハイブリッドのキャッシュストアを定義します。\n\n```ruby\nclass HybridCache < ActiveSupport::Cache::Store\n  def initialize(new_cache:, old_cache:)\n    @new_cache = new_cache\n    @old_cache = old_cache\n  end\n\n  def read(...)\n    old_cache.read(...) || new_cache.read(...)\n  end\n  # fetch/exist?/read_multi/fetch_multi を同様に実装する\n\n  def clear\n    old_cache.clear\n    new_cache.clear\n  end\u0006\n  # delete/delete_matched/write/write_multi/increment/decrement 等を同様に実装する\n\n  def silence!\n    old_cache.silence!\n    new_cache.silence!\n  end\n\n  def mute\n    old_cache.mute do\n      new_cache.mute do\n        yield\n      end\n    end\n  end\n\n  private\n\n  attr_reader :old_cache, :new_cache\nend\n```\n\n```ruby\nconfig.cache_store = Hanica::HybridCache.new(\n  old_cache: ActiveSupport::Cache::XxxCacheStore.new(...),\n  new_cache: ActiveSupport::Cache::XxxCacheStore.new(...)\n)\n```\n\n## 2. デプロイする\n\nハイブリッドのキャッシュストアを定義したら、デプロイして本番環境でキャッシュを同期していきます。  \n\n実際のところ、新旧どちらのキャッシュ結果を優先するかで実装は若干変わりますが、新旧のキャッシュストアをうまく稼働させることで、移行期間中に新しいキャッシュストアにもキャッシュが反映されていくようにしています。\n\n## 3. 新しいキャッシュストアに移行する\n\n最後に、十分に移行期間が経過して新しいキャッシュストアにキャッシュが書き込まれたら、新しいキャッシュストアに移行します。\n\n```ruby\nconfig.cache_store = ActiveSupport::Cache::XxxCacheStore.new(...)\n```\n\nこれにて、Railsで任意のキャッシュストアを移行する手順を紹介しました。  \n実際には[redis-activesupport](https://github.com/redis-store/redis-activesupport)からRails本体のRedis実装に移行したのですが、この手順で問題なく移行できました。  \n\n以外と、誰も手順を公開していなかったので参考になれば幸いです。\n"},"prevPost":null,"nextPost":{"id":"2023-12-02-advent-calendar-2023","title":"佐渡島の物件情報を集める方法","date":"2023-12-02 18:00"}},"__N_SSG":true}