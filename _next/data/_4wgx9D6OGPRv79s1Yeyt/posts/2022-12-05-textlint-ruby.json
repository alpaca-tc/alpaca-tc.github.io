{"pageProps":{"post":{"id":"2022-12-05-textlint-ruby","title":"textlintでRubyファイルを文章校正できるようにした話","date":"2022-12-05 17:00","content":"<p>これは <a href=\"https://qiita.com/advent-calendar/2022/smarthr\">SmartHR アドベントカレンダー</a>の5日目の記事です。</p>\n<p>SmartHRでは <a href=\"https://github.com/textlint/textlint\">textlint</a> という文書の校正ツールを利用しています。<a href=\"https://shanaiho.smarthr.co.jp/n/n881866630eda\">過去の記事はこちら</a></p>\n<img class=\"image_on_frame center\" src=\"/images/blog/textlint-ruby/textlint-ruby.png\" alt=\"textlintの検知例\" />\n<p>しかし、今までtextlintはRubyファイルに対応していませんでした。</p>\n<p>この度は <a href=\"https://github.com/kufu/textlint-ruby\">textlint-ruby</a> というtextlintでRubyファイルを解析できるようにするためのプラグインを作成したので、ご紹介します。</p>\n<h2>textlint-rubyの仕組み</h2>\n<p>textlintで何かを解析するためには、文章をパースして文字列のデータ構造を抽出する必要があります。</p>\n<p>例えば、下記のプログラムでは <code>APIでエラーが発生しました</code> という文字列がtextlintに渡すべき値になります。</p>\n<div class=\"remark-highlight\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">create</span></span>\n  redirect_to<span class=\"token punctuation\">(</span>root_path<span class=\"token punctuation\">,</span> <span class=\"token symbol\">error</span><span class=\"token operator\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'APIでエラーが発生しました'</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span>\n</code></pre></div>\n<p>textlint-rubyでは、<a href=\"https://docs.ruby-lang.org/ja/latest/class/Ripper.html\">ripper</a>を使ってRubyファイルを解析して、抽出した文字列等をtextlint用のASTに変換してくれます。</p>\n<h2>textlint-rubyの使い方</h2>\n<p>textlintはすでに導入済みとします。</p>\n<p>まずは、対象プロジェクトのGemfileにRubyファイルの解析を担うtextlint-rubyを追加します。</p>\n<div class=\"remark-highlight\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token comment\"># Gemfile</span>\ngroup <span class=\"token symbol\">:development</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:test</span> <span class=\"token keyword\">do</span>\n  gem <span class=\"token string-literal\"><span class=\"token string\">'textlint-ruby'</span></span>\n<span class=\"token keyword\">end</span>\n</code></pre></div>\n<p>その後、textlintのプラグインを追加します。</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">yarn</span> <span class=\"token function\">add</span> <span class=\"token parameter variable\">--dev</span> textlint-plugin-ruby\nor\n$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">--dev</span> textlint-plugin-ruby\n</code></pre></div>\n<p><code>.textlintrc</code> に設定を追加すれば設定は完了です。</p>\n<div class=\"remark-highlight\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"plugins\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"ruby\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"execCommand\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"bundle\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"exec\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"textlint-ruby\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"--stdio\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h2>終わりに</h2>\n<p>SmartHRに入社して2週目の時に「Rubyの会社なのにtextlintでパースできないのなんで??」と思い立って、数時間でこのプラグインを作成しました。<br>\n今となっては、会社の主要プロダクトのほとんどに導入されており、会社のバリューである「一語一句に手間ひまかける」の一助となっています。</p>\n<p>このプラグインの作成にあたって、textlint本体にもPRを送って外部プロセスを呼び出せる仕組みになりました。<br>\nもし他のプログラミング言語に対応したいときでも、同じ発想でプラグインを作成できるはずです。</p>\n<p>みなさまもどうぞお試しあれ。</p>","rawContent":"\nこれは [SmartHR アドベントカレンダー](https://qiita.com/advent-calendar/2022/smarthr)の5日目の記事です。\n\nSmartHRでは [textlint](https://github.com/textlint/textlint) という文書の校正ツールを利用しています。[過去の記事はこちら](https://shanaiho.smarthr.co.jp/n/n881866630eda)\n\n<img class=\"image_on_frame center\" src=\"/images/blog/textlint-ruby/textlint-ruby.png\" alt=\"textlintの検知例\" />\n\nしかし、今までtextlintはRubyファイルに対応していませんでした。\n\nこの度は [textlint-ruby](https://github.com/kufu/textlint-ruby) というtextlintでRubyファイルを解析できるようにするためのプラグインを作成したので、ご紹介します。\n\n## textlint-rubyの仕組み\n\ntextlintで何かを解析するためには、文章をパースして文字列のデータ構造を抽出する必要があります。\n\n例えば、下記のプログラムでは `APIでエラーが発生しました` という文字列がtextlintに渡すべき値になります。\n\n```ruby\ndef create\n  redirect_to(root_path, error: 'APIでエラーが発生しました')\nend\n```\n\ntextlint-rubyでは、[ripper](https://docs.ruby-lang.org/ja/latest/class/Ripper.html)を使ってRubyファイルを解析して、抽出した文字列等をtextlint用のASTに変換してくれます。\n\n## textlint-rubyの使い方\n\ntextlintはすでに導入済みとします。\n\nまずは、対象プロジェクトのGemfileにRubyファイルの解析を担うtextlint-rubyを追加します。\n\n```ruby\n# Gemfile\ngroup :development, :test do\n  gem 'textlint-ruby'\nend\n```\n\nその後、textlintのプラグインを追加します。\n\n```shell\n$ yarn add --dev textlint-plugin-ruby\nor\n$ npm install --dev textlint-plugin-ruby\n```\n\n`.textlintrc` に設定を追加すれば設定は完了です。\n\n```json\n{\n  \"plugins\": {\n    \"ruby\": {\n      \"execCommand\": [\"bundle\", \"exec\", \"textlint-ruby\", \"--stdio\"]\n    }\n  }\n}\n```\n\n## 終わりに\n\nSmartHRに入社して2週目の時に「Rubyの会社なのにtextlintでパースできないのなんで??」と思い立って、数時間でこのプラグインを作成しました。  \n今となっては、会社の主要プロダクトのほとんどに導入されており、会社のバリューである「一語一句に手間ひまかける」の一助となっています。\n\nこのプラグインの作成にあたって、textlint本体にもPRを送って外部プロセスを呼び出せる仕組みになりました。  \nもし他のプログラミング言語に対応したいときでも、同じ発想でプラグインを作成できるはずです。\n\nみなさまもどうぞお試しあれ。\n"},"prevPost":{"id":"2023-02-01-accelerate-lean-software-and-devops","title":"LeanとDevOpsの科学を読んだ","date":"2023-02-01 17:00"},"nextPost":{"id":"2021-11-14-thyroid-surgery-insurance-benefits","title":"がん手術における収支報告","date":"2021-11-14 21:00"}},"__N_SSG":true}