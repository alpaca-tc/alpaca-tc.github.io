{"pageProps":{"post":{"id":"2013-11-21-i-begin-to-lean-vim-1","title":"Vimを勉強し始めました #1","date":"2013-11-21 09:11","content":"<h1>Vim読書会 #1</h1>\n<p>先日から続けているVim読書会(一人)ですが、\n今回からモチベーションのために記事にあげて行おうと思います。</p>\n<p><em>本日読むソースコード</em></p>\n<p><strong>Vim-0.3</strong></p>\n<ul>\n<li>cmdline.c</li>\n<li>cmdtab.h</li>\n<li>cmdcmds.c</li>\n</ul>\n<!-- more -->\n<h2>cmdline.c L3723行</h2>\n<p>cmdline.c: functions for reading in the command line and executing it</p>\n<div class=\"remark-highlight\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token comment\">// L650:</span>\n<span class=\"token keyword\">static</span> char_u <span class=\"token operator\">*</span> <span class=\"token function\">DoOneCmd</span><span class=\"token punctuation\">(</span>buff<span class=\"token punctuation\">)</span> char_u <span class=\"token operator\">*</span>buff<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">{</span>\n</code></pre></div>\n<p>この関数で、コマンドラインからの入力を処理してます。\n関数の前半部分で入力をパースして、後半部分でコマンドを分岐しています。</p>\n<p>分岐部分はこんな感じですね。</p>\n<div class=\"remark-highlight\"><pre class=\"language-c\"><code class=\"language-c\">L1111<span class=\"token operator\">:</span>\ncmdswitch<span class=\"token operator\">:</span>\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>cmdidx<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/*</span>\n<span class=\"token comment\">     * quit current window, quit Vim if closed the last window</span>\n<span class=\"token comment\">     */</span>\n    <span class=\"token keyword\">case</span> CMD_quit<span class=\"token operator\">:</span>\n      <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n    <span class=\"token keyword\">case</span> CMD_qall<span class=\"token operator\">:</span>\n      <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n</code></pre></div>\n<p><code>:quit</code>の処理を変更したかったら、<code>case CMD_quit</code>以下を変更すればいいです。</p>\n<h2>cmdtab.h L337行</h2>\n<p>また、<code>CMD_...</code>といった定数は<code>cmdtab.h</code>で初期化されており、全てのコマンドが定義されています。\nコマンドは、ユニークなID,コマンド名,受け付ける引数がここで定義されます。</p>\n<p>そのコマンドの実際の動作は、<code>cmdline.c</code>にべた書きされているという感じでしょうか。</p>\n<p>Vim-3.0の書き方だと、コマンドがひとつ増える度に<code>cmdline.c</code>の分岐がひとつ増えるというヘビーな書き方なので、新しいバージョンではリファクタリングされてそう。</p>\n<h2>cmdcmds.c L541行</h2>\n<p>cmdcmds.c: functions for command line commands</p>\n<p><code>cmdcmds.c</code>は、<code>cmdline.c</code>でのコマンドの分岐で重なる部分の関数をまとめたもの、といった印象です。\nWordpressでいうfunctionsのような感じかな。一応、他の場所でも使える感じに仕上がっています。</p>\n<p>この中には、<code>do_align</code>や<code>doshell</code>といった、想像につく名前の関数がありますね。\n<code>CMD_move</code>で分岐した場合は、こちらに飛ばされます。</p>\n<h2>まとめ</h2>\n<p>コマンド関連の細かい実装を見るのは大変ですが、全体的に見ると読みやすかったです。\nVimのオプションやコマンド名が、そのまま変数に使われているので読みやすかったです。</p>\n<p><code>:echo</code>などのコマンドを追加する場合は、ここら辺を弄るだけでなんとかなりそうですね！\n次回トライしてみます。</p>","rawContent":"\n# Vim読書会 #1\n\n先日から続けているVim読書会(一人)ですが、\n今回からモチベーションのために記事にあげて行おうと思います。\n\n*本日読むソースコード*\n\n**Vim-0.3**\n\n- cmdline.c\n- cmdtab.h\n- cmdcmds.c\n\n<!-- more -->\n\n## cmdline.c L3723行\n\ncmdline.c: functions for reading in the command line and executing it\n\n```c\n// L650:\nstatic char_u * DoOneCmd(buff) char_u *buff; {\n```\n\nこの関数で、コマンドラインからの入力を処理してます。\n関数の前半部分で入力をパースして、後半部分でコマンドを分岐しています。\n\n分岐部分はこんな感じですね。\n\n```c\nL1111:\ncmdswitch:\n  switch (cmdidx)\n  {\n    /*\n     * quit current window, quit Vim if closed the last window\n     */\n    case CMD_quit:\n      ...\n\n    case CMD_qall:\n      ...\n```\n\n`:quit`の処理を変更したかったら、`case CMD_quit`以下を変更すればいいです。\n\n## cmdtab.h L337行\n\nまた、`CMD_...`といった定数は`cmdtab.h`で初期化されており、全てのコマンドが定義されています。\nコマンドは、ユニークなID,コマンド名,受け付ける引数がここで定義されます。\n\nそのコマンドの実際の動作は、`cmdline.c`にべた書きされているという感じでしょうか。\n\nVim-3.0の書き方だと、コマンドがひとつ増える度に`cmdline.c`の分岐がひとつ増えるというヘビーな書き方なので、新しいバージョンではリファクタリングされてそう。\n\n## cmdcmds.c L541行\n\ncmdcmds.c: functions for command line commands\n\n`cmdcmds.c`は、`cmdline.c`でのコマンドの分岐で重なる部分の関数をまとめたもの、といった印象です。\nWordpressでいうfunctionsのような感じかな。一応、他の場所でも使える感じに仕上がっています。\n\nこの中には、`do_align`や`doshell`といった、想像につく名前の関数がありますね。\n`CMD_move`で分岐した場合は、こちらに飛ばされます。\n\n## まとめ\n\nコマンド関連の細かい実装を見るのは大変ですが、全体的に見ると読みやすかったです。\nVimのオプションやコマンド名が、そのまま変数に使われているので読みやすかったです。\n\n`:echo`などのコマンドを追加する場合は、ここら辺を弄るだけでなんとかなりそうですね！\n次回トライしてみます。\n"},"prevPost":{"id":"2013-11-23-the-story-about-guard-shell","title":"Guard-shellが便利だった話","date":"2013-11-23 01:34"},"nextPost":{"id":"2013-11-15-i-begin-to-learn-vim","title":"そろそろVimを使いこなせるようになりたい。","date":"2013-11-15 06:58"}},"__N_SSG":true}