{"pageProps":{"post":{"id":"2013-12-17-how-to-use-vim-unite-giti","title":"仕事が捗る！VimからGitを使う最適解","date":"2013-12-17 23:36","content":"<p>先日の記事でもチラッと出てきた<a href=\"https://github.com/kmnk/vim-unite-giti\">vim-unite-giti</a>というプラグインがあります。</p>\n<p><strong>ものすごーーーく便利</strong>なプラグインなんですが、何故かほとんど話を聞かないプラグインです。</p>\n<p>先日の記事でも、git系のプラグインは「知らなかった」という話を沢山聞きました。せっかくなので使い方を紹介します。</p>\n<!-- more -->\n<h2>今回紹介するのはvim-unite-giti!!</h2>\n<p>何はともあれ、<strong>まずは動画をみてくれ。</strong></p>\n<iframe src=\"https://www.youtube.com/embed/jCgcpIO9oBs\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<p>とにかく、uniteインターフェースは操作を覚えることが少ない。</p>\n<p>今回も、幾つかのUniteコマンドを使っているけれど、基本的に「選択」→「アクション」の動作しかない。</p>\n<h3>:Unite giti/status</h3>\n<p>add, unstage, checkoutなどの操作が簡単ですね</p>\n<p>conflictがあれば、すぐ見れます。「選択」→「commitアクション」と進めば、指定したファイルだけのコミットもお手軽に作れます(!!)</p>\n<h3>:Unite giti/branch</h3>\n<p>tracking, chckout, deleteなどの操作が簡単ですね。</p>\n<p>branchを切るのにわざわざShellを使うなんて。あなた、Vimと触れ合う時間が減ってしまうではないですか。</p>\n<h3>:Unite giti/log</h3>\n<p>紹介していませんが、普通に便利です。vimdiffなどを見る事も簡単です。</p>\n<h2>vim-unite-giti以外のプラグイン</h2>\n<h3><em>git-vim</em> :GitDiff, :Git push</h3>\n<p>こちらは、特に驚きはないので初めて使う人以外は見なくてもいいです。</p>\n<iframe src=\"https://www.youtube.com/embed/wWI3Wb-0Vw4\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<p>言わずもがな、コマンド名の通りです。</p>\n<p>git-vimを使って何がうれしいかと言うと、それなりに補完ができる点です。</p>\n<h3><em>fugitive</em> :Gcommit, :Gblame</h3>\n<p>すでに語り尽くされているので、ここでは取り上げません。</p>\n<p>他のプラグインにもにたようなコマンドがありますが、色付きなのと、機能性が優れているのでfugitiveがおすすめです。</p>\n<h2>vimrc</h2>\n<p>今回の動画で使用したvimrcと同じような設定です</p>\n<p><a href=\"https://gist.github.com/qickstarter/8008989\">vimrc Gist</a></p>\n<h2>まとめ</h2>\n<p>ujihisaさんに憧れてのYoutube記事です。笑</p>\n<p>余談ですが、作者の<a href=\"https://github.com/kmnk\">kmnk</a>さんのコードは<strong>めちゃくちゃ奇麗</strong>です。</p>\n<p>今までで読んできた中で、<em>一番奇麗なVimLのコード</em>でした。ほどよい抽象化、適切な命名、整理されたファイル達。率直に、この人と一緒に仕事出来る人は幸せだろうなぁと感じました。</p>\n<p>vim-unite-gitiを作ってくださって感謝します。</p>","rawContent":"\n先日の記事でもチラッと出てきた[vim-unite-giti](https://github.com/kmnk/vim-unite-giti)というプラグインがあります。\n\n**ものすごーーーく便利**なプラグインなんですが、何故かほとんど話を聞かないプラグインです。\n\n先日の記事でも、git系のプラグインは「知らなかった」という話を沢山聞きました。せっかくなので使い方を紹介します。\n\n<!-- more -->\n\n## 今回紹介するのはvim-unite-giti!!\n\n何はともあれ、**まずは動画をみてくれ。**\n\n<iframe src=\"https://www.youtube.com/embed/jCgcpIO9oBs\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\nとにかく、uniteインターフェースは操作を覚えることが少ない。\n\n今回も、幾つかのUniteコマンドを使っているけれど、基本的に「選択」→「アクション」の動作しかない。\n\n### :Unite giti/status\n\nadd, unstage, checkoutなどの操作が簡単ですね\n\nconflictがあれば、すぐ見れます。「選択」→「commitアクション」と進めば、指定したファイルだけのコミットもお手軽に作れます(!!)\n\n### :Unite giti/branch\n\ntracking, chckout, deleteなどの操作が簡単ですね。\n\nbranchを切るのにわざわざShellを使うなんて。あなた、Vimと触れ合う時間が減ってしまうではないですか。\n\n### :Unite giti/log\n\n紹介していませんが、普通に便利です。vimdiffなどを見る事も簡単です。\n\n## vim-unite-giti以外のプラグイン\n\n### *git-vim* :GitDiff, :Git push\n\nこちらは、特に驚きはないので初めて使う人以外は見なくてもいいです。\n\n<iframe src=\"https://www.youtube.com/embed/wWI3Wb-0Vw4\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n言わずもがな、コマンド名の通りです。\n\ngit-vimを使って何がうれしいかと言うと、それなりに補完ができる点です。\n\n### *fugitive* :Gcommit, :Gblame\n\nすでに語り尽くされているので、ここでは取り上げません。\n\n他のプラグインにもにたようなコマンドがありますが、色付きなのと、機能性が優れているのでfugitiveがおすすめです。\n\n## vimrc\n\n今回の動画で使用したvimrcと同じような設定です\n\n[vimrc Gist](https://gist.github.com/qickstarter/8008989)\n\n## まとめ\n\nujihisaさんに憧れてのYoutube記事です。笑\n\n余談ですが、作者の[kmnk](https://github.com/kmnk)さんのコードは**めちゃくちゃ奇麗**です。\n\n今までで読んできた中で、*一番奇麗なVimLのコード*でした。ほどよい抽象化、適切な命名、整理されたファイル達。率直に、この人と一緒に仕事出来る人は幸せだろうなぁと感じました。\n\nvim-unite-gitiを作ってくださって感謝します。\n\n"},"prevPost":{"id":"2013-12-19-jump-to-gem-path","title":"Vim中級者を脱する path編","date":"2013-12-19 08:02"},"nextPost":{"id":"2013-12-16-ruby-class-variable","title":"Rubyのクラス変数について詰まったのでヘルプ","date":"2013-12-16 01:10"}},"__N_SSG":true}