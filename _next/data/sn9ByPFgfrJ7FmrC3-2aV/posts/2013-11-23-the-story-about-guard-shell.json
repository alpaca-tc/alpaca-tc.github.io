{"pageProps":{"post":{"id":"2013-11-23-the-story-about-guard-shell","title":"Guard-shellが便利だった話","date":"2013-11-23 01:34","content":"<p><a href=\"https://github.com/guard/guard\">Guard</a>って便利ですよねー。</p>\n<p>あの、ファイルをwatchして、変更を検知したらアクションをグルグル回すやつです。</p>\n<p>最近Vimの開発をしていて、あー変更と同時にコンパイルしてくれたらいいのになぁ。</p>\n<p>Guardを使って実現してみました。</p>\n<!-- more -->\n<h1>guard + guard-shell</h1>\n<p>おなじみのGuardにshellコマンドを実行できるようにします。</p>\n<p><em>GuardでC言語を自動コンパイル！！！</em></p>\n<div class=\"remark-highlight\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token comment\"># Gemfile</span>\nsource <span class=\"token string\">'https://rubygems.org'</span>\n\ngem <span class=\"token string\">'guard'</span>\ngem <span class=\"token string\">'guard-shell'</span>\n</code></pre></div>\n<div class=\"remark-highlight\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token comment\"># Guardfile</span>\ngroup <span class=\"token symbol\">:vim3</span> <span class=\"token keyword\">do</span>\n  guard <span class=\"token symbol\">:shell</span> <span class=\"token keyword\">do</span>\n    target_dir <span class=\"token operator\">=</span> <span class=\"token string\">'vim-3\\.0/src'</span>\n    watch<span class=\"token punctuation\">(</span><span class=\"token regex\">%r!^<span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span>target_dir<span class=\"token delimiter tag\">}</span></span>/(.+)\\.(c|h)!</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>\n      `cd <span class=\"token comment\">#{target_dir} &#x26;&#x26; make`</span>\n      `cd <span class=\"token comment\">#{target_dir} &#x26;&#x26; make debug`</span>\n    <span class=\"token keyword\">end</span>\n  <span class=\"token keyword\">end</span>\n\n  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">end</span>\n</code></pre></div>\n<p>ポイントは、<em>group</em>と*guard :shell ...*ですね。</p>\n<h2>guardのDSL <em>group</em></h2>\n<p>groupのDSLを使うと、guardの設定を切り替えることができます。</p>\n<p>例えば、バージョン毎にgroupで設定をわけておけば、不必要な部分でguardが動作することを防ぐことができます。\n僕の場合は、vimのバージョン毎に設定を切り替えることで不必要なコンパイルを防いでいます。</p>\n<p>また、分けてあるgroupを切り替えるときは、guardのコンソールで<code>scope vim3</code>と打てば切り替わります。</p>\n<p>(起動時にscopeを指定する場合は、<code>guard --group vim3</code>)</p>\n<h2>guard-shellを使う</h2>\n<p>guard-shellは、ファイルの変更をフックにしてshellコマンドを実行するgemです。</p>\n<p>と、あたかもshellに特化したネーミングですが、実際はただ単にwatchに渡したブロックを評価するだけのシンプルなやつです。</p>\n<p>下記のようにすれば、ファイルが保存されたと同時に<code>hogepiyoooooooooooooo</code>と教えてくれます。\nわーい。</p>\n<div class=\"remark-highlight\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token comment\"># Guardfile</span>\nguard <span class=\"token symbol\">:shell</span> <span class=\"token keyword\">do</span>\n  watch<span class=\"token punctuation\">(</span><span class=\"token regex\">/.*/</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">|</span>m<span class=\"token operator\">|</span> `say hogepiyoooooooooooooo` <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">end</span>\n</code></pre></div>\n<h2>まとめ</h2>\n<p><em>guard-shell便利。</em></p>\n<p>(ホゲピヨーーーーーって言うのかと思ったら、「ホージピュゥ」って何か冷めた感じに返された。。。)</p>"},"prevPost":{"id":"2013-12-03-how-to-use-watson","title":"インラインTODO管理のWatsonを使う","date":"2013-12-03 23:49"},"nextPost":{"id":"2013-11-21-i-begin-to-lean-vim-1","title":"Vimを勉強し始めました #1","date":"2013-11-21 09:11"}},"__N_SSG":true}