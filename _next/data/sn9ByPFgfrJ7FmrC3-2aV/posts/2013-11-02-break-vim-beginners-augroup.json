{"pageProps":{"post":{"id":"2013-11-02-break-vim-beginners-augroup","title":"Vim中級者を脱する augroup編","date":"2013-11-02 02:30","content":"<h2>augroup, autocmdを理解する</h2>\n<p><strong>所要時間 3分</strong></p>\n<h3>この記事を読むべき人</h3>\n<ul>\n<li><code>augroup</code>を理解していない人</li>\n<li><code>:source</code>コマンドを使う人</li>\n</ul>\n<!-- more -->\n<h2>そもそもautocmdって？</h2>\n<p>これは何をしているコマンドなのか分解してみましょう。</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">autocmd BufNewFile * echo &#x26;#39;This is new file&#x26;#39;</code></pre></div>\n<ol>\n<li>autocmdのコマンドを開始しますよ</li>\n<li><code>BufNewFile</code>というタイミングでこのコマンドを実行しますよ</li>\n<li>全てのバッファで<code>echo 'This is new file'</code>を実行しますよ</li>\n</ol>\n<p>となります。</p>\n<p>このように、保存時や新規のファイルといったタイミングでコマンドを実行できます。</p>\n<h2>では、augroupはなんのために存在するの？</h2>\n<p><code>augroup</code>は、<code>autocmd</code>をグループでまとめるためのコマンドです。こんな感じて使われます。</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">augroup EditNewFile\n  autocmd!\n  autocmd BufNewFile * echo &#x26;#39;This is new file&#x26;#39;\naugroup END</code></pre></div>\n<p>例えば、<code>autocmd</code>が設定されているvimrcを、<code>:source ~/.vimrc</code>で再度読み込むとしましょう。</p>\n<p>するとどうなるかというと、通常は**<code>autocmd</code>が重複して2度設定されます**\n当然、その<code>autocmd</code>が発火するときに2度実行されるので、実行が遅くなります。</p>\n<p>それを防ぐために<code>augroup</code>を使います。</p>\n<h2>ベストプラクティスは？</h2>\n<p>つまるところ、<code>augroup</code>は<code>autocmd</code>をまとめて初期化する場合に使用します。\n具体例を上げると、下記のような形になります。</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">augroup MyAutoCmd\n  autocmd! &#x26;quot; =&#x26;gt; このaugroupに紐づいたautocmdを消し去ります\naugroup END\n\n...\n\naugroup MyAutoCmd\n  autocmd BufNewFile * echo &#x26;#39;This is new file&#x26;#39;\n  autocmd BufNewFile,BufRead *.haml setf haml\naugroup END</code></pre></div>\n<p>こうすることで、2重に設定されることのない設定になります。</p>\n<h2>もう一歩踏み込んでみる</h2>\n<p>autocmdの設定方法をVimのRuntimeから学んでみましょう。</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">:edit $VIMRUNTIME/filetype.vim</code></pre></div>\n<p>これはファイルタイプの定義を行っているファイルです。</p>\n<p>augroupが宣言されているので、一覧を<code>:autocmd filetypedetect</code>でみれることが分かります。</p>\n<p>驚くことに、もの凄い数のコマンドを実行してファイルタイプを設定していることが分かります。</p>\n<h3>ftdetectを知る</h3>\n<p>filetype.vimにて<code>runtime! ftdetect/*.vim</code>と書かれており、<code>~/.vim/ftdetect/*</code>を読み込んでいることが分かります。</p>\n<p>つまり、ファイルタイプの設定は<code>ftdetect</code>以下で設定するのがベターとされています。</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">&#x26;quot; ~/.vim/ftdetect/coffee.vim\nautocmd BufNewFile,BufRead *.coffee    setf coffee</code></pre></div>\n<p>といった設定にて、ファイルタイプを検出できるようになります。\n<code>augroup filetypedetect</code>の宣言内なので、グループの宣言は不要です。</p>\n<h2>本日の脱Vim中級者</h2>\n<p>vimrcでファイルタイプの検出をしている方は、<code>~/.vim/ftdetect</code>以下に設定を移してみましょう。</p>"},"prevPost":{"id":"2013-11-07-plugins-best-of-vim-1","title":"オススメなVimのプラグイン紹介","date":"2013-11-07 05:22"},"nextPost":{"id":"2013-11-01-octopress_and_vimplugin","title":"octopressとセットで入れておきたいVimプラグインまとめ","date":"2013-11-01 17:06"}},"__N_SSG":true}